package xtensus.entity;

// Generated 22 mars 2013 14:16:14 by Hibernate Tools 3.4.0.Beta1

import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Transaction generated by hbm2java
 */
@Entity
@Table(name = "transactionn")
public class Transaction extends Entite implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1361794311298722259L;
	private Integer transactionId;
	private Typetransaction transactiontype;
	private Etat etat;
	private Expdest expdest;
	private TransactionDestinationReelle transactionDestinationReelle;
	private Dossier dossier;
	private Integer idUtilisateur;
	private Date transactionDateTransaction;
	private String transactionCommentaire;
	private Date transactionDateReponse;
	private Integer transactionDelegueId;
	private Boolean transactionSupprimer;
	private Date transactionSupprimerDate;
	private Integer transactionSupprimerDelegueId;
	private Integer transactionOrdre;
	private String transactionAccuseReception;
	private Date transactionDateConsultation;
	private String transactionTypeIntervenant;
	private Integer transactionIdIntervenant;
	private String transactionCommentaireAnnotation;
	private Integer transactionFirst;
	private Set<Expdest> expdests = new HashSet<Expdest>(0);
	private Set<Annotation> annotations = new HashSet<Annotation>(0);
	private Set<Commentaire> commentaires = new HashSet<Commentaire>(0);
	private Set<Relance> relances = new HashSet<Relance>(0);
    private Set<TransactionDocument> transactionDocuments = new HashSet<TransactionDocument>(0);
    //[JS] :Refernce Courrier
	private String courrierReferenceCorrespondant;
	private String courrierType;
	private int courrierTypeOrdre;
	private Integer courrierDateReceptionAnnee;
	private Integer courrierDateReceptionMois;
	private Classement_archivage_niveau_01 classement_archivage_niveau_01;

	public Transaction() {
	}

	public Transaction(Typetransaction transactiontype, Etat etat,
			Expdest expdest,
			TransactionDestinationReelle transactiondestinationreelle,
			Dossier dossier, Integer idUtilisateur,
			Date transactionDateTransaction, String transactionCommentaire,
			Date transactionDateReponse, Integer transactionDelegueId,
			Boolean transactionSupprimer, Date transactionSupprimerDate,
			Integer transactionSupprimerDelegueId, Integer transactionOrdre,
			String transactionAccuseReception,
			Date transactionDateConsultation,
			String transactionTypeIntervenant,
			Integer transactionIdIntervenant, Set<Annotation> annotations,
			Set<Commentaire> commentaires) {
		this.transactiontype = transactiontype;
		this.etat = etat;
		this.expdest = expdest;
		this.transactionDestinationReelle = transactiondestinationreelle;
		this.dossier = dossier;
		this.idUtilisateur = idUtilisateur;
		this.transactionDateTransaction = transactionDateTransaction;
		this.transactionCommentaire = transactionCommentaire;
		this.transactionDateReponse = transactionDateReponse;
		this.transactionDelegueId = transactionDelegueId;
		this.transactionSupprimer = transactionSupprimer;
		this.transactionSupprimerDate = transactionSupprimerDate;
		this.transactionSupprimerDelegueId = transactionSupprimerDelegueId;
		this.transactionOrdre = transactionOrdre;
		this.transactionAccuseReception = transactionAccuseReception;
		this.transactionDateConsultation = transactionDateConsultation;
		this.transactionTypeIntervenant = transactionTypeIntervenant;
		this.transactionIdIntervenant = transactionIdIntervenant;
		this.annotations = annotations;
		this.commentaires = commentaires;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "transactionId", unique = true, nullable = false)
	public Integer getTransactionId() {
		return this.transactionId;
	}

	public void setTransactionId(Integer transactionId) {
		this.transactionId = transactionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "transactionTypeId")
	public Typetransaction getTypetransaction() {
		return this.transactiontype;
	}

	public void setTypetransaction(Typetransaction transactiontype) {
		this.transactiontype = transactiontype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "etatId")
	public Etat getEtat() {
		return this.etat;
	}

	public void setEtat(Etat etat) {
		this.etat = etat;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idExpDest")
	public Expdest getExpdest() {
		return this.expdest;
	}

	public void setExpdest(Expdest expdest) {
		this.expdest = expdest;
	}

	@ManyToOne
	@JoinColumn(name = "transactionDestinationReelleId")
	public TransactionDestinationReelle getTransactionDestinationReelle() {
		return this.transactionDestinationReelle;
	}

	public void setTransactionDestinationReelle(
			TransactionDestinationReelle transactiondestinationreelle) {
		this.transactionDestinationReelle = transactiondestinationreelle;
	}

	@ManyToOne
	@JoinColumn(name = "dossierId")
	public Dossier getDossier() {
		return this.dossier;
	}

	public void setDossier(Dossier dossier) {
		this.dossier = dossier;
	}

	@Column(name = "idUtilisateur")
	public Integer getIdUtilisateur() {
		return this.idUtilisateur;
	}

	public void setIdUtilisateur(Integer idUtilisateur) {
		this.idUtilisateur = idUtilisateur;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "transactionDateTransaction", length = 10)
	public Date getTransactionDateTransaction() {
		if(transactionDateTransaction!=null){
			Calendar cal = Calendar.getInstance();
			  cal.setTime(transactionDateTransaction);
			  cal.set(Calendar.MILLISECOND, 0);
			  transactionDateTransaction = new java.sql.Timestamp(cal.getTimeInMillis());}
		
		return this.transactionDateTransaction;
	}

	public void setTransactionDateTransaction(Date transactionDateTransaction) {
		this.transactionDateTransaction = transactionDateTransaction;
	}

	@Column(name = "transactionCommentaire", length = 254)
	public String getTransactionCommentaire() {
		return this.transactionCommentaire;
	}

	public void setTransactionCommentaire(String transactionCommentaire) {
		this.transactionCommentaire = transactionCommentaire;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "transactionDateReponse", length = 10)
	public Date getTransactionDateReponse() {
		return this.transactionDateReponse;
	}

	public void setTransactionDateReponse(Date transactionDateReponse) {
		this.transactionDateReponse = transactionDateReponse;
	}

	@Column(name = "transactionDelegueId")
	public Integer getTransactionDelegueId() {
		return this.transactionDelegueId;
	}

	public void setTransactionDelegueId(Integer transactionDelegueId) {
		this.transactionDelegueId = transactionDelegueId;
	}

	@Column(name = "transactionSupprimer")
	public Boolean getTransactionSupprimer() {
		return this.transactionSupprimer;
	}

	public void setTransactionSupprimer(Boolean transactionSupprimer) {
		this.transactionSupprimer = transactionSupprimer;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "transactionSupprimerDate", length = 10)
	public Date getTransactionSupprimerDate() {
		return this.transactionSupprimerDate;
	}

	public void setTransactionSupprimerDate(Date transactionSupprimerDate) {
		this.transactionSupprimerDate = transactionSupprimerDate;
	}

	@Column(name = "transactionSupprimerDelegueId")
	public Integer getTransactionSupprimerDelegueId() {
		return this.transactionSupprimerDelegueId;
	}

	public void setTransactionSupprimerDelegueId(
			Integer transactionSupprimerDelegueId) {
		this.transactionSupprimerDelegueId = transactionSupprimerDelegueId;
	}

	@Column(name = "transactionOrdre")
	public Integer getTransactionOrdre() {
		return this.transactionOrdre;
	}

	public void setTransactionOrdre(Integer transactionOrdre) {
		this.transactionOrdre = transactionOrdre;
	}

	@Column(name = "transactionAccuseReception", length = 20)
	public String getTransactionAccuseReception() {
		return this.transactionAccuseReception;
	}

	public void setTransactionAccuseReception(String transactionAccuseReception) {
		this.transactionAccuseReception = transactionAccuseReception;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "transactionDateConsultation", length = 10)
	public Date getTransactionDateConsultation() {
		return this.transactionDateConsultation;
	}

	public void setTransactionDateConsultation(Date transactionDateConsultation) {
		this.transactionDateConsultation = transactionDateConsultation;
	}

	@Column(name = "transactionTypeIntervenant", length = 45)
	public String getTransactionTypeIntervenant() {
		return this.transactionTypeIntervenant;
	}

	public void setTransactionTypeIntervenant(String transactionTypeIntervenant) {
		this.transactionTypeIntervenant = transactionTypeIntervenant;
	}

	@Column(name = "transactionIdIntervenant")
	public Integer getTransactionIdIntervenant() {
		return this.transactionIdIntervenant;
	}

	public void setTransactionIdIntervenant(Integer transactionIdIntervenant) {
		this.transactionIdIntervenant = transactionIdIntervenant;
	}

	@Column(name = "transactionFirst")
	public Integer getTransactionFirst() {
		return transactionFirst;
	}

	public void setTransactionFirst(Integer transactionFirst) {
		this.transactionFirst = transactionFirst;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "transactionannotation", joinColumns = { @JoinColumn(name = "idTransaction", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "idAnnotation", nullable = false, updatable = false) })
	public Set<Annotation> getAnnotations() {
		return this.annotations;
	}

	public void setAnnotations(Set<Annotation> annotations) {
		this.annotations = annotations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaction")
	public Set<Commentaire> getCommentaires() {
		return this.commentaires;
	}

	public void setCommentaires(Set<Commentaire> commentaires) {
		this.commentaires = commentaires;
	}

	public void setExpdests(Set<Expdest> expdests) {
		this.expdests = expdests;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "transactions")
	public Set<Expdest> getExpdests() {
		return expdests;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "transactions")
	public Set<Relance> getRelances() {
		return this.relances;
	}

	public void setRelances(Set<Relance> relances) {
		this.relances = relances;
	}

	public void setTransactionCommentaireAnnotation(String transactionCommentaireAnnotation) {
		this.transactionCommentaireAnnotation = transactionCommentaireAnnotation;
	}

	@Column(name = "transactionCommentaireAnnotation", length = 250)
	public String getTransactionCommentaireAnnotation() {
		return transactionCommentaireAnnotation;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaction")
	public Set<TransactionDocument> getTransactionDocuments() {
		return transactionDocuments;
	}

	public void setTransactionDocuments(
			Set<TransactionDocument> transactionDocuments) {
		this.transactionDocuments = transactionDocuments;
	}
	
	@Column(name = "courrierReferenceCorrespondant", length = 100)
	public String getCourrierReferenceCorrespondant() {
		return courrierReferenceCorrespondant;
	}

	public void setCourrierReferenceCorrespondant(
			String courrierReferenceCorrespondant) {
		this.courrierReferenceCorrespondant = courrierReferenceCorrespondant;
	}
	
	@Column(name = "courrierType")
	public String getCourrierType() {
		return courrierType;
	}

	public void setCourrierType(String courrierType) {
		this.courrierType = courrierType;
	}
	
	@Column(name = "courrierTypeOrdre")
	public int getCourrierTypeOrdre() {
		return courrierTypeOrdre;
	}

	public void setCourrierTypeOrdre(int courrierTypeOrdre) {
		this.courrierTypeOrdre = courrierTypeOrdre;
	}

	public void setCourrierDateReceptionAnnee(Integer courrierDateReceptionAnnee) {
		this.courrierDateReceptionAnnee = courrierDateReceptionAnnee;
	}
	
	@Column(name = "courrierDateReceptionAnnee")
	public Integer getCourrierDateReceptionAnnee() {
		return courrierDateReceptionAnnee;
	}
	@Column(name = "courrierDateReceptionMois")
	public Integer getCourrierDateReceptionMois() {
		return courrierDateReceptionMois;
	}

	public void setCourrierDateReceptionMois(Integer courrierDateReceptionMois) {
		this.courrierDateReceptionMois = courrierDateReceptionMois;
	}

	@Override
	public String toString() {
		return "Transaction [transactionId=" + transactionId
				+ ", idUtilisateur="
				+ idUtilisateur + ", courrierReferenceCorrespondant="
				+ courrierReferenceCorrespondant + ", courrierTypeOrdre=" + courrierTypeOrdre
				+ ", courrierDateReceptionAnnee=" + courrierDateReceptionAnnee
				+ "]";
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "classement_archivage_niveau_01")
	public Classement_archivage_niveau_01 getClassement_archivage_niveau_01() {
		return classement_archivage_niveau_01;
	}

	public void setClassement_archivage_niveau_01(
			Classement_archivage_niveau_01 classement_archivage_niveau_01) {
		this.classement_archivage_niveau_01 = classement_archivage_niveau_01;
	}

	
	
	
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "id.expdest")
//	public Set<TransactionDestination> getTransactionDestinations() {
//		return transactionDestinations;
//	}
//
//	public void setTransactionDestinations(
//			Set<TransactionDestination> transactionDestinations) {
//		this.transactionDestinations = transactionDestinations;
//	}

}