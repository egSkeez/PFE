package xtensus.gnl.entity;

// Generated 11 mai 2013 11:49:40 by Hibernate Tools 3.4.0.Beta1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import xtensus.entity.Entite;

/**
 * Notification generated by hbm2java
 */
@Entity
@Table(name = "notification")
public class Notification extends Entite implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7467556331398432194L;
	private Integer notificationId;
	private Evenement evenement;
	private String notificationLibelle;
	private String notificationDescription;
	private Boolean notificationActivation;
	private Boolean notificationSuppression;
	private String notificationTemp;
	private String notificationNomVariable;
	private Set<Templatenotification> templatenotifications = new HashSet<Templatenotification>(
			0);
	private Set<Message> messages = new HashSet<Message>(0);
	private Set<VariablesNotification> variablesNotifications = new HashSet<VariablesNotification>(0);

	public Notification() {
	}

	public Notification(Evenement evenement, String notificationLibelle,
			String notificationDescription, Boolean notificationActivation,
			Boolean notificationSuppression,String notificationTemp, String notificationNomVariable,
			Set<Templatenotification> templatenotifications,
			Set<Message> messages, Set<VariablesNotification> variablesNotifications) {
		this.evenement = evenement;
		this.notificationLibelle = notificationLibelle;
		this.notificationDescription = notificationDescription;
		this.notificationActivation = notificationActivation;
		this.notificationSuppression = notificationSuppression;
		this.notificationTemp = notificationTemp;
		this.notificationNomVariable = notificationNomVariable;
		this.templatenotifications = templatenotifications;
		this.messages = messages;
		this.variablesNotifications = variablesNotifications;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "notificationId", unique = true, nullable = false)
	public Integer getNotificationId() {
		return this.notificationId;
	}

	public void setNotificationId(Integer notificationId) {
		this.notificationId = notificationId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "evenementId")
	public Evenement getEvenement() {
		return this.evenement;
	}

	public void setEvenement(Evenement evenement) {
		this.evenement = evenement;
	}

	@Column(name = "notificationLibelle", length = 20)
	public String getNotificationLibelle() {
		return this.notificationLibelle;
	}

	public void setNotificationLibelle(String notificationLibelle) {
		this.notificationLibelle = notificationLibelle;
	}

	@Column(name = "notificationDescription", length = 65535)
	public String getNotificationDescription() {
		return this.notificationDescription;
	}

	public void setNotificationDescription(String notificationDescription) {
		this.notificationDescription = notificationDescription;
	}

	@Column(name = "notificationActivation")
	public Boolean getNotificationActivation() {
		return this.notificationActivation;
	}

	public void setNotificationActivation(Boolean notificationActivation) {
		this.notificationActivation = notificationActivation;
	}

	@Column(name = "notificationSuppression")
	public Boolean getNotificationSuppression() {
		return this.notificationSuppression;
	}

	public void setNotificationSuppression(Boolean notificationSuppression) {
		this.notificationSuppression = notificationSuppression;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "notification")
	public Set<Templatenotification> getTemplatenotifications() {
		return this.templatenotifications;
	}

	public void setTemplatenotifications(
			Set<Templatenotification> templatenotifications) {
		this.templatenotifications = templatenotifications;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "notification")
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "notificationvariable", catalog = "xtensusgnl", joinColumns = { @JoinColumn(name = "notificationId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "variableId", nullable = false, updatable = false) })
	public Set<VariablesNotification> getVariables() {
		return this.variablesNotifications;
	}

	public void setVariables(Set<VariablesNotification> variablesNotifications) {
		this.variablesNotifications = variablesNotifications;
	}

	public String getNotificationTemp() {
		return notificationTemp;
	}

	public void setNotificationTemp(String notificationTemp) {
		this.notificationTemp = notificationTemp;
	}

	public void setNotificationNomVariable(String notificationNomVariable) {
		this.notificationNomVariable = notificationNomVariable;
	}

	@Column(name = "notificationNomVariable", length = 100)
	public String getNotificationNomVariable() {
		return notificationNomVariable;
	}

}
