package xtensus.beans.common.GBO;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import xtensus.beans.common.LanguageManagerBean;
import xtensus.beans.common.VariableGlobale;
import xtensus.beans.utils.CourrierInformations;
import xtensus.beans.utils.RapportCourrierConfidentilaite;
import xtensus.beans.utils.RapportCourrierUrgence;
import xtensus.beans.utils.RapportDossier;
import xtensus.beans.utils.RapportExpediteurDestinataire;
import xtensus.entity.Confidentialite;
import xtensus.entity.Courrier;
import xtensus.entity.CourrierDossier;
import xtensus.entity.Document;
import xtensus.entity.Dossier;
import xtensus.entity.Expdestexterne;
import xtensus.entity.Nature;
import xtensus.entity.Societe;
import xtensus.entity.TransactionAnnotation;
import xtensus.entity.TransactionAnnotationId;
import xtensus.entity.Transmission;
import xtensus.entity.Urgence;
import xtensus.entity.Variables;
import xtensus.services.ApplicationManager;
import xtensus.services.Export;

@Component
@Scope("request")
public class RapportDossierConsulterBean {
	private ApplicationManager appMgr;
	private Export export;
	private Courrier courrier;
	private Dossier dossier;
	private String documentt;
	private String importance;
	private String confidentialites;;
	private TransactionAnnotation cA;
	private TransactionAnnotationId cI;
	public boolean status;
	public boolean status1;
	public boolean status2;
	public boolean status3;
	private Nature nature;
	private Transmission transmission;
	private Confidentialite confidentialite;
	private Urgence urgence;
	@Autowired
	private VariableGlobale vb;
	@Autowired
	private LanguageManagerBean lm;

	@Autowired
	private DossierGestionBean dossierGestionBean;
	private List<CourrierDossier> listCourriers;
	private List<Dossier> listDossiers;

	private List<Courrier> listCourriers2;
	private List<Confidentialite> listConfidentilaite;
	private List<Urgence> listUrgence;
	private List<RapportCourrierConfidentilaite> listRapportCourrierConfidentilaite;
	private RapportCourrierConfidentilaite rapportCourrierConfidentilaite;
	private List<RapportCourrierUrgence> listRapportCourrierUrgence;
	private RapportCourrierUrgence rapportCourrierUrgence;
	private Expdestexterne expedestExpdestexterne;
	private List<RapportExpediteurDestinataire> rapportExpediteurDestinatairelist;
	private RapportExpediteurDestinataire rapportExpediteurDestinataire;

	@Autowired
	public RapportDossierConsulterBean(
			@Qualifier("applicationManager") ApplicationManager appMgr,
			@Qualifier("export") Export export) {
		this.appMgr = appMgr;
		this.export = export;
		courrier = new Courrier();
		dossier = new Dossier();

		nature = new Nature();
		transmission = new Transmission();
		confidentialite = new Confidentialite();
		urgence = new Urgence();
		expedestExpdestexterne = new Expdestexterne();
		listCourriers = new ArrayList<CourrierDossier>();

		listCourriers2 = new ArrayList<Courrier>();
		cA = new TransactionAnnotation();
		cI = new TransactionAnnotationId();

		listRapportCourrierConfidentilaite = new ArrayList<RapportCourrierConfidentilaite>();
		listConfidentilaite = new ArrayList<Confidentialite>();
		listUrgence = new ArrayList<Urgence>();
		rapportCourrierConfidentilaite = new RapportCourrierConfidentilaite();
		listRapportCourrierUrgence = new ArrayList<RapportCourrierUrgence>();
		rapportCourrierUrgence = new RapportCourrierUrgence();
		System.out
				.println("**************BeanInjecte CourrierConsultationBean *********");
	}

	/******************************** Rapport Fiche Courrier ************************************************/

	// Fiche Dossier Français
	@SuppressWarnings("unchecked")
	public void printPDFFR() {

		try {
			List<RapportDossier> rapportDossier = new ArrayList<RapportDossier>();
			RapportDossier rapport;
			// Variable
			Variables variable = new Variables();
			variable = appMgr.getList(Variables.class).get(0);
			// Societe
			String societeNom = appMgr.listSocieteByLibelle("Nom_Societe")
					.get(0).getSocieteLibelle();
			String societeOrganismeParent = appMgr
					.listSocieteByLibelle("Ministere_Nom").get(0)
					.getSocieteLibelle();
			String societeRepublique = appMgr
					.listSocieteByLibelle("Republique_Nom").get(0)
					.getSocieteLibelle();
			String societeVille = appMgr.listSocieteByLibelle("Ville_Nom")
					.get(0).getSocieteLibelle();
			// Variables
			String nomProjet = appMgr
					.listVariablesByLibelle("Footer_Nom_Projet").get(0)
					.getVariablesContenu();
			// //Statistiques
			// listConfidentilaite = appMgr.getList(Confidentialite.class);
			// listUrgence = appMgr.getList(Urgence.class);
			// for( int t =0 ;t<listConfidentilaite.size();t++ ){
			// int refconf = listConfidentilaite.get(t).getConfidentialiteId();
			// long conf = appMgr.countListRowConfedentilaiteDossier(refconf);
			// rapportCourrierConfidentilaite.setConfidentilaiteLibelle(listConfidentilaite.get(t).getConfidentialiteLibelle());
			// rapportCourrierConfidentilaite.setNombre(conf);
			// listRapportCourrierConfidentilaite.add(rapportCourrierConfidentilaite);
			// rapportCourrierConfidentilaite = new
			// RapportCourrierConfidentilaite();
			// }
			//
			// for( int t =0 ;t<listUrgence.size();t++ ){
			//
			// int refUrgence = listUrgence.get(t).getUrgenceId();
			// long urg = appMgr.countListRowUrgenceDossier(refUrgence);
			// rapportCourrierUrgence.setUrgenceLibelle(listUrgence.get(t).getUrgenceLibelle()
			// );
			// rapportCourrierUrgence.setNombre(urg);
			// listRapportCourrierUrgence.add(rapportCourrierUrgence);
			// rapportCourrierUrgence = new RapportCourrierUrgence();
			// }
			// // URgence
			// String total = "<b>Importance </b>"+"[" + listDossiers.size()+
			// "] : " ;
			// importance= total +
			// listRapportCourrierUrgence.get(0).getUrgenceLibelle() + " ("
			// +String.valueOf(listRapportCourrierUrgence.get(0).getNombre())+")";
			// for(int k=1; k<listRapportCourrierUrgence.size();k++){
			// importance = importance + "; "
			// +listRapportCourrierUrgence.get(k).getUrgenceLibelle() +" ("
			// +String.valueOf(listRapportCourrierUrgence.get(k).getNombre())+")";
			// }
			// rapport.setImpotance("<li>" + importance + "</li>");
			//
			//
			// String total1 = "<b>Confidentialité </b>"+"[" +
			// listDossiers.size()+ "] : ";
			// confidentialites= total1+
			// listRapportCourrierConfidentilaite.get(0).getConfidentilaiteLibelle()
			// +" ("
			// +String.valueOf(listRapportCourrierConfidentilaite.get(0).getNombre())+")";
			// for(int l=1; l<listRapportCourrierUrgence.size();l++){
			// confidentialites = confidentialites +"; "
			// +listRapportCourrierConfidentilaite.get(l).getConfidentilaiteLibelle()
			// +" ("
			// +String.valueOf(listRapportCourrierConfidentilaite.get(l).getNombre())+")";
			// }
			// rapport.setConfidentialites("<li>" + confidentialites +"</li>");
			// dossier

			// Listes des dossiers
			// ***********Ines
			listDossiers = dossierGestionBean.getListDossier();
			for (int j = 0; j < listDossiers.size(); j++) {
				rapport = new RapportDossier();
				// general
				rapport.setSocieteNom(societeNom);
				rapport.setSocieteOrganismeParent(societeOrganismeParent);
				rapport.setSocieteRepublique(societeRepublique);
				rapport.setSocieteVille(societeVille);
				rapport.setNomProjet(nomProjet);
				rapport.setPathJasper(vb.getPathJasper());
				// general
				rapport.setNumero(j + 1);
				int refDos = listDossiers.get(j).getDossierId();
				// rapport.setDossierDescription("<b>Description : </b>" +
				// listDossiers.get(j).getDossierDescription());
				rapport.setDossier(listDossiers.get(j));
				// Listes des courriers attaches
				// **Ines**
				List<CourrierInformations> courrierAttacher = new ArrayList<CourrierInformations>();
				List<CourrierDossier> listCourrierDossier;
				listCourrierDossier = appMgr
						.getCourrierDossierByIdDossier(refDos);
				List<Courrier> listCourriers2 = new ArrayList<Courrier>();
				for (CourrierDossier courrierDossier : listCourrierDossier) {
					listCourriers2.add(appMgr.getCourrierByIdCourrier(
							courrierDossier.getId().getIdCourrier()).get(0));
				}
				for (int i = 0; i < listCourriers2.size(); i++) {
					CourrierInformations courrierInfo = new CourrierInformations();
					courrierInfo.setCourrier(listCourriers2.get(i));
					int reftransmission = listCourriers2.get(i)
							.getTransmission().getTransmissionId();
					transmission = appMgr.getTransmissionById(reftransmission)
							.get(0);
					courrierInfo.setTransmission(transmission);
					int refConf = listCourriers2.get(i).getConfidentialite()
							.getConfidentialiteId();
					confidentialite = appMgr.getConfidentialiteById(refConf)
							.get(0);
					courrierInfo.setConfidentialite(confidentialite);
					int refU = listCourriers2.get(i).getUrgence()
							.getUrgenceId();
					urgence = appMgr.getUrgenceById(refU).get(0);
					courrierInfo.setCourrierNature(appMgr
							.getNatureById(
									listCourriers2.get(i).getNature()
											.getNatureId()).get(0)
							.getNatureLibelle());
					courrierInfo.setUrgence(urgence);
					courrierAttacher.add(courrierInfo);
				}
				rapport.setListeCourrierAttacher(new ArrayList<CourrierInformations>());
				rapport.getListeCourrierAttacher().addAll(courrierAttacher);
				rapportDossier.add(rapport);
			}
			export.exportToPDF(rapportDossier, "FicheListDossiers",
					"Dossier-sListes");
			// export.exportToPDF(rapportDossier, "DossiersListes",
			// "Dossier-sListes");
		} catch (Exception e) {
			e.printStackTrace();
		}
		// ----
		// rapport.setCourrier(listCourriers2.get(i));
		// List<Document> liste = new ArrayList<Document>();
		// int refCourrier = listCourriers2.get(i).getIdCourrier();
		// liste = appMgr.getDocumentByIdCourrier(refCourrier);
		//
		// int reftransmission = listCourriers2.get(i).getTransmission()
		// .getTransmissionId();
		// transmission =
		// appMgr.getTransmissionById(reftransmission).get(
		// 0);
		//
		// int refU = listCourriers2.get(i).getUrgence().getUrgenceId();
		// urgence = appMgr.getUrgenceById(refU).get(0);
		//
		// int refnature =
		// listCourriers2.get(i).getNature().getNatureId();
		// nature = appMgr.getNatureById(refnature).get(0);
		//
		// int refConf = listCourriers2.get(i).getConfidentialite()
		// .getConfidentialiteId();
		// confidentialite =
		// appMgr.getConfidentialiteById(refConf).get(0);

		// rapportExpediteurDestinataire
		// .setDestinataire("<b>Destinataire : </b>"
		// + vb.getCopyExpNom() );
		// rapportExpediteurDestinataire
		// .setExpediteur("<b>Expéditeur : </b>"
		// + vb.getCopyExpNom());
		// rapportExpediteurDestinatairelist
		// .add(rapportExpediteurDestinataire);
		// rapport.setRapportExpediteurDestinataire(rapportExpediteurDestinatairelist);
		// rapport.setNumero(i + 1);
		// String b = "";
		// if (liste.size() != 0) {
		// // Liste des documents relative à chaque courrier
		// b = "<b>Liste des documents : </b>" + "<b>(1)</b> "
		// + liste.get(0).getDocumentNom();
		// for (int x = 1; x < liste.size(); x++) {
		// Document doc = liste.get(x);
		// rapport.setNomProjet(nomProjet);
		// String a = String.valueOf(x + 1);
		// System.out.println(a);
		// b = b + ";<b> (" + a + ")</b> " + doc.getDocumentNom();
		// }
		// } else {
		// b = "<b>Ce courrier n'a pas de documents </b>";
		// }
		// rapport.setNature(nature);
		// rapport.setUrgence(urgence);
		// rapport.setConfidentialite(confidentialite);
		// rapport.setTransmission(transmission);
		// rapport.setNomProjet(nomProjet);
		// rapport.setDossierNom(b);
		// rapport.setDocuments(liste);
		// rapportDossier.add(rapport);
		// rapport = new RapportDossier();
		// nature = new Nature();
		// urgence = new Urgence();
		// confidentialite = new Confidentialite();
		// transmission = new Transmission();
		// rapportExpediteurDestinataire = new
		// RapportExpediteurDestinataire();
		// rapportExpediteurDestinatairelist = new
		// ArrayList<RapportExpediteurDestinataire>();
		// liste = new ArrayList<Document>();
		// }
		// **Ines**
		// int refUrgence =
		// listDossiers.get(j).getUrgence().getUrgenceId();
		// urgence = appMgr.getUrgenceById(refUrgence).get(0);

		// int confref =
		// listDossiers.get(j).getConfidentialite().getConfidentialiteId();
		// confidentialite =
		// appMgr.getConfidentialiteById(confref).get(0);

		// listCourriers = appMgr.getCourrierDossierByIdDossier(refDos);
		// for (CourrierDossier courrierDossier :listCourriers ){

		// listCourriers2.add(appMgr.getCourrierByIdCourrier(courrierDossier.getId().getIdCourrier()).get(0));

		// }
		// if(listCourriers2.size()!=0){
		// String b = "<b>Liste des courriers : </b>"+ "<b>(1)</b> " +
		// listCourriers2.get(0).getCourrierObjet();
		// for (int i = 1; i < listCourriers2.size() ; i++) {

		// Courrier cour = listCourriers2.get(i);

		// String a = String.valueOf(i+1);
		// System.out.println(a);
		// b = b + ";<b> (" + a+")</b> "+cour.getCourrierObjet() ; }
		// rapport.setListCourriers(b);}
		// else {
		// rapport.setListCourriers("");
		// }

		// Proprietaire Dossier

		// expedestExpdestexterne =
		// appMgr.getExpediteurById(listDossiers.get(j).getExpdestexterne()).get(0);
		// rapport.setExpediteur(expedestExpdestexterne);
		// rapport.setDossier(listDossiers.get(j));
		// rapport.setUrgence(urgence);
		// rapport.setConfidentialite(confidentialite);
		// rapportcourrier.add(rapport);
		// listCourriers = new ArrayList<CourrierDossier>();
		// urgence = new Urgence();
		// confidentialite = new Confidentialite();
		// listCourriers2 = new ArrayList<Courrier>();
		// expedestExpdestexterne = new Expdestexterne();

	}

	// Fiche Dossier Français
	@SuppressWarnings("unchecked")
	public void printPDF() {
		try {
			List<RapportDossier> rapportcourrier = new ArrayList<RapportDossier>();
			RapportDossier rapport = new RapportDossier();
			// Variable
			Variables variable = new Variables();
			variable = appMgr.getList(Variables.class).get(0);

			// Societe
			List<Societe> societes = new ArrayList<Societe>();
			List<Societe> societes2 = new ArrayList<Societe>();
			societes = appMgr.getList(Societe.class);
			String societeNom = societes.get(1).getSocieteLibelle();
			rapport.setSocieteNom(societeNom);

			String nomProjet = appMgr.getList(Variables.class).get(0)
					.getVariablesContenu();
			String societeOrganismeParent = societes.get(3).getSocieteLibelle();
			rapport.setSocieteOrganismeParent(societeOrganismeParent);

			String societeRepublique = societes.get(5).getSocieteLibelle();
			rapport.setSocieteRepublique(societeRepublique);

			String societeVille = societes.get(6).getSocieteLibelle();
			rapport.setSocieteVille(societeVille);

			// Urgence
			Urgence urgence1 = new Urgence();
			urgence1 = appMgr.getList(Urgence.class).get(0);
			rapport.setUrgence(urgence1);

			// confidentialite
			Confidentialite confidentialite1 = new Confidentialite();
			confidentialite1 = appMgr.getList(Confidentialite.class).get(0);
			rapport.setConfidentialite(confidentialite1);

			// dossier
			Dossier dossier = new Dossier();
			dossier = appMgr.getList(Dossier.class).get(0);
			int refDossier = dossier.getDossierId();
			rapport.setDossierDescription("<b>الموضوع : </b>"
					+ dossier.getDossierDescription());
			rapport.setDossier(dossier);

			// Listes des courriers attaches
			List<CourrierDossier> listCourriers = new ArrayList<CourrierDossier>();
			listCourriers = appMgr.getCourrierDossierByIdDossier(refDossier);

			for (CourrierDossier courrierDossier : listCourriers) {

				listCourriers2.add(appMgr.getCourrierByIdCourrier(
						courrierDossier.getId().getIdCourrier()).get(0));

			}
			for (int i = 0; i < listCourriers2.size(); i++) {

				// String v = String.valueOf(i+1);
				// rapport.setCourrierReference("<b>" + v +" : </b>"+
				// listCourriers2.get(i).getCourrierReferenceCorrespondant());
				rapport.setCourrier(listCourriers2.get(i));

				List<Document> liste = new ArrayList<Document>();
				int refCourrier = listCourriers2.get(i).getIdCourrier();
				liste = appMgr.getDocumentByIdCourrier(refCourrier);

				int reftransmission = listCourriers2.get(i).getTransmission()
						.getTransmissionId();
				transmission = appMgr.getTransmissionById(reftransmission).get(
						0);

				int refUrgence = listCourriers2.get(i).getUrgence()
						.getUrgenceId();
				urgence = appMgr.getUrgenceById(refUrgence).get(0);

				int refnature = listCourriers2.get(i).getNature().getNatureId();
				nature = appMgr.getNatureById(refnature).get(0);

				int confref = listCourriers2.get(i).getConfidentialite()
						.getConfidentialiteId();
				confidentialite = appMgr.getConfidentialiteById(confref).get(0);

				rapport.setNumero(i + 1);
				// Liste des documents relative à chaque courrier
				String b = "<b>الوثائق   : </b>" + "<b>(1)</b> "
						+ liste.get(0).getDocumentNomAR();
				for (int x = 1; x < liste.size(); x++) {
					Document doc = liste.get(x);
					rapport.setNomProjet(nomProjet);
					String a = String.valueOf(x + 1);
					System.out.println(a);
					b = b + ";<b> (" + a + ")</b> " + doc.getDocumentNomAR();
				}
				rapport.setNature(nature);
				rapport.setUrgence(urgence);
				rapport.setConfidentialite(confidentialite);
				rapport.setTransmission(transmission);
				rapport.setNomProjet(nomProjet);
				rapport.setDossierNom(b);
				rapport.setDocuments(liste);
				rapportcourrier.add(rapport);
				rapport = new RapportDossier();
				nature = new Nature();
				urgence = new Urgence();
				confidentialite = new Confidentialite();
				transmission = new Transmission();
				liste = new ArrayList<Document>();
			}

			export.exportToPDF(rapportcourrier, "FicheDossier-AR",
					"FicheDossier-AR");
		} catch (Exception e) {
			System.out.println("*******Erreur Export pdf*******");
			e.printStackTrace();
		}
	}

	public void setExpedestExpdestexterne(Expdestexterne expedestExpdestexterne) {
		this.expedestExpdestexterne = expedestExpdestexterne;
	}

	public Expdestexterne getExpedestExpdestexterne() {
		return expedestExpdestexterne;
	}

}
