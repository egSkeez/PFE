package xtensus.entity;

// Generated 22 mars 2013 14:16:14 by Hibernate Tools 3.4.0.Beta1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Utilisateur generated by hbm2java
 */
@Entity
@Table(name = "utilisateur")
public class Utilisateur extends Entite implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4787778577615243953L;
	private Integer utilisateurId;
	private Direction direction;
	private Groupe groupe;
	private Expdestexterne expdestexterne;
	private String lutilisateurLogin;
	private String utilisateurMotDePasse;
	private String utilisateurStatut;
	private Set<Logs> logses = new HashSet<Logs>(0);
//	private Set<Transaction> transactions = new HashSet<Transaction>(0);
	private Set<Utilisateurdelegation> utilisateurdelegations = new HashSet<Utilisateurdelegation>(0);
//	private Set<Utilisateurdelegation> utilisateurdelegations_1 = new HashSet<Utilisateurdelegation>(0);

	public Utilisateur() {
	}

	public Utilisateur(Direction direction, Groupe groupe,
			Expdestexterne expdestexterne, String lutilisateurLogin,
			String utilisateurMotDePasse, String utilisateurStatut,
			Set<Logs> logses, Set<Transaction> transactions,
			Set<Utilisateurdelegation> utilisateurdelegations,
			Set<Utilisateurdelegation> utilisateurdelegations_1) {
		this.direction = direction;
		this.groupe = groupe;
		this.expdestexterne = expdestexterne;
		this.lutilisateurLogin = lutilisateurLogin;
		this.utilisateurMotDePasse = utilisateurMotDePasse;
		this.utilisateurStatut = utilisateurStatut;
		this.logses = logses;
//		this.transactions = transactions;
		this.utilisateurdelegations = utilisateurdelegations;
//		this.utilisateurdelegations_1 = utilisateurdelegations_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "utilisateurId", unique = true, nullable = false)
	public Integer getUtilisateurId() {
		return this.utilisateurId;
	}

	public void setUtilisateurId(Integer utilisateurId) {
		this.utilisateurId = utilisateurId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "directionId")
	public Direction getDirection() {
		return this.direction;
	}

	public void setDirection(Direction direction) {
		this.direction = direction;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idGroupe")
	public Groupe getGroupe() {
		return this.groupe;
	}

	public void setGroupe(Groupe groupe) {
		this.groupe = groupe;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idExpDestExterne")
	public Expdestexterne getExpdestexterne() {
		return this.expdestexterne;
	}

	public void setExpdestexterne(Expdestexterne expdestexterne) {
		this.expdestexterne = expdestexterne;
	}

	@Column(name = "lutilisateurLogin", length = 100)
	public String getLutilisateurLogin() {
		return this.lutilisateurLogin;
	}

	public void setLutilisateurLogin(String lutilisateurLogin) {
		this.lutilisateurLogin = lutilisateurLogin;
	}

	@Column(name = "utilisateurMotDePasse", length = 100)
	public String getUtilisateurMotDePasse() {
		return this.utilisateurMotDePasse;
	}

	public void setUtilisateurMotDePasse(String utilisateurMotDePasse) {
		this.utilisateurMotDePasse = utilisateurMotDePasse;
	}

	@Column(name = "utilisateurStatut", length = 50)
	public String getUtilisateurStatut() {
		return this.utilisateurStatut;
	}

	public void setUtilisateurStatut(String utilisateurStatut) {
		this.utilisateurStatut = utilisateurStatut;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	public Set<Logs> getLogses() {
		return this.logses;
	}

	public void setLogses(Set<Logs> logses) {
		this.logses = logses;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
//	public Set<Transaction> getTransactions() {
//		return this.transactions;
//	}
//
//	public void setTransactions(Set<Transaction> transactions) {
//		this.transactions = transactions;
//	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "utilisateurs")
	public Set<Utilisateurdelegation> getUtilisateurdelegations() {
		return this.utilisateurdelegations;
	}

	public void setUtilisateurdelegations(
			Set<Utilisateurdelegation> utilisateurdelegations) {
		this.utilisateurdelegations = utilisateurdelegations;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
//	public Set<Utilisateurdelegation> getUtilisateurdelegations_1() {
//		return this.utilisateurdelegations_1;
//	}
//
//	public void setUtilisateurdelegations_1(
//			Set<Utilisateurdelegation> utilisateurdelegations_1) {
//		this.utilisateurdelegations_1 = utilisateurdelegations_1;
//	}

}
