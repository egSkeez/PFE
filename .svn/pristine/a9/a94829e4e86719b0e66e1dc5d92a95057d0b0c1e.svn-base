package xtensus.faxmail.beans;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.MessageSource;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import xtensus.beans.common.LanguageManagerBean;
import xtensus.beans.common.VariableGlobale;
import xtensus.entity.Expdestexterne;
import xtensus.entity.Mail;
import xtensus.entity.Pm;
import xtensus.entity.Pp;
import xtensus.faxmail.utils.GedUtils;
import xtensus.faxmail.utils.MailConnection;
import xtensus.services.ApplicationManager;

@Component
@Scope("request")
public class DetailsMailBean {

	private GedUtils gedUtils;
	@Autowired
	private VariableGlobale vb;
	private ApplicationManager appMgr;
	private Mail selectedMail;
	private AttachmentFileBean selectedAttachmentFileBean;
	private boolean status = false;
	private List<AttachmentFileBean> attachmentFileBeanList;
	private static boolean flag = false;
	@Autowired
	private LanguageManagerBean lm;
	@Autowired
	private MessageSource messageSource;
	private String message;
	public boolean status1;

	@Autowired
	public DetailsMailBean(
			@Qualifier("applicationManager") ApplicationManager appMgr) {
		this.setAppMgr(appMgr);
		selectedMail = new Mail();
		gedUtils = new GedUtils();
		attachmentFileBeanList = new ArrayList<AttachmentFileBean>();
	}

	@PostConstruct
	public void Initialize() {
		selectedMail = new Mail();
		selectedMail = vb.getMail();
		attachmentFileBeanList.clear();
		if (selectedMail.getMailAttachmentFiles() != null) {

			for (Map.Entry<String, Integer> entry : selectedMail
					.getMailAttachmentFiles().entrySet()) {
				
				if(!entry.getKey().equals("smime.p7s")){
				attachmentFileBeanList.add(new AttachmentFileBean(entry
						.getKey(), entry.getValue()));
				System.out.println("Ajout de " + entry.getKey()
						+ " a la liste des attachments ...");
			}}
		}
	}

	public void traiter() {
		try {
			selectedMail.setMailIs_treated(1);
			appMgr.update(selectedMail);
			gedUtils = vb.getGedUtils();
			gedUtils.saveMail(selectedMail);
			setStatus(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public String transfereMail() {
		String res = "nopass";
		status = false;
		try {

			if (selectedMail.getMailIs_treated() == 0) {

				String mailPPPM = selectedMail.getMailFromAddress();
				Pp pp = new Pp();
				Pm pm = new Pm();
				Expdestexterne expdestexterne = new Expdestexterne();
				int nb = appMgr.listExpdestexterneByMail(mailPPPM).size();
				if (nb == 0) {
					setMessage(messageSource.getMessage("erreurTransfereMail",
							new Object[] {}, lm.createLocal()));
					status1 = true;
				} else {
					List<Object> copyListSelectedObjectExp = new ArrayList<Object>();
					expdestexterne = appMgr.listExpdestexterneByMail(mailPPPM)
							.get(0);
					int refExp = expdestexterne.getIdExpDestExterne();
					int nbPP = appMgr.getPPByReferenceExpediteur(refExp).size();
					int nbPM = appMgr.getPMByReferenceExpediteur(refExp).size();
					if (nbPP != 0) {
						pp = appMgr.getPPByReferenceExpediteur(refExp).get(0);
						copyListSelectedObjectExp.add(pp);
					}
					if (nbPM != 0) {
						pm = appMgr.getPMByReferenceExpediteur(refExp).get(0);
						copyListSelectedObjectExp.add(pm);
					}
					vb.setCopyListSelectedObjectExp(copyListSelectedObjectExp);
					//*** AC 
					vb.setMail(selectedMail);
					vb.setRedirect("FromMail");
					res = "pass";
				}
			} else {
				setMessage(messageSource.getMessage("confirmTransfereMail",
						new Object[] {}, lm.createLocal()));
				status1 = true;
			}
			System.out.println("*******SelectionSucces*********");
		} catch (Exception e) {
			System.out.println("*******ErreurDeSelection*******");
			e.printStackTrace();
		}
		return res;
	}

	public void downloadAttachmentFile() {
		String messageId = selectedMail.getMailHeaders().get("Message-ID");
		String filename = selectedAttachmentFileBean.getName();

		System.out.println("Starting download file : " + filename
				+ " form mail with messageId size : " + messageId + " ...");

		InputStream inputStream = null;

		try {

			MailConnection mailConnection = new MailConnection();
			byte[] byteArray = mailConnection.downloadAttachmentFile(messageId,
					filename);
			inputStream = new ByteArrayInputStream(byteArray);

			FacesContext context = FacesContext.getCurrentInstance();
			HttpServletResponse response = (HttpServletResponse) context
					.getExternalContext().getResponse();
			response.setContentType("application/download");
			//*** Original code
			//response.setHeader("Content-Disposition", "attachment; filename="+ filename);
			//*** AC - my code 
			response.setHeader("Content-Disposition","attachment; filename=\"" + filename + "\"");
			OutputStream outputStream = response.getOutputStream();

			int b;
			while ((b = inputStream.read()) != -1) {
				outputStream.write(b);
			}

			outputStream.flush();
			outputStream.close();

			context.responseComplete();

		} catch (IOException e) {
			e.printStackTrace();
		}catch (Exception e) {
			System.out.println("*******download attachment file*******");
			e.printStackTrace();
		}
	}

	public String retour() {
		return "retour";
	}

	public ApplicationManager getAppMgr() {
		return appMgr;
	}

	public void setAppMgr(ApplicationManager appMgr) {
		this.appMgr = appMgr;
	}

	public boolean isStatus() {
		return status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	public List<AttachmentFileBean> getAttachmentFileBeanList() {
		return attachmentFileBeanList;
	}

	public void setAttachmentFileBeanList(
			ArrayList<AttachmentFileBean> attachmentFileBeanList) {
		this.attachmentFileBeanList = attachmentFileBeanList;
	}

	public AttachmentFileBean getSelectedAttachmentFileBean() {
		return selectedAttachmentFileBean;
	}

	public void setSelectedAttachmentFileBean(
			AttachmentFileBean selectedAttachmentFileBean) {
		this.selectedAttachmentFileBean = selectedAttachmentFileBean;
	}

	public boolean isFlag() {
		return flag;
	}

	public void setFlag(boolean flag) {

		System.out.println("mise du flag a " + flag + " ...");

		DetailsMailBean.flag = flag;
	}

	public void setVb(VariableGlobale vb) {
		this.vb = vb;
	}

	public VariableGlobale getVb() {
		return vb;
	}

	public void setGedUtils(GedUtils gedUtils) {
		this.gedUtils = gedUtils;
	}

	public GedUtils getGedUtils() {
		return gedUtils;
	}

	public LanguageManagerBean getLm() {
		return lm;
	}

	public void setLm(LanguageManagerBean lm) {
		this.lm = lm;
	}

	public MessageSource getMessageSource() {
		return messageSource;
	}

	public void setMessageSource(MessageSource messageSource) {
		this.messageSource = messageSource;
	}

	public String getMessage() {
		return message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	public boolean isStatus1() {
		return status1;
	}

	public void setStatus1(boolean status1) {
		this.status1 = status1;
	}

	public void setAttachmentFileBeanList(
			List<AttachmentFileBean> attachmentFileBeanList) {
		this.attachmentFileBeanList = attachmentFileBeanList;
	}

	public void setSelectedMail(Mail selectedMail) {
		this.selectedMail = selectedMail;
	}

	public Mail getSelectedMail() {

		return selectedMail;
	}

}
