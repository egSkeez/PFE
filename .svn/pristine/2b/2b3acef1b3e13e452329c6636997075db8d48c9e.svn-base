package xtensus.entity;

// Generated 22 mars 2013 14:16:14 by Hibernate Tools 3.4.0.Beta1

import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Document generated by hbm2java
 */
@Entity
@Table(name = "document")
public class Document extends Entite implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 5131057865152403686L;
	private Integer idDocument;
	private Courrier courrier;
	private Document documentParent;
	private String documentReference;
	private String documentNom;
	private String documentObjet;
	private String documentCommentaire;
	private String documentType;
	private Integer documentDelegueId;
	private Integer documentProprietaire;
	private Date documentDateInsertion;
	private Integer documentHierarchique;
	private Boolean documentSupprime;
	private Date documentSupprimeDate;
	private Integer documentSupprimeDelegueId;
	private String documentNomAR;
	private String documentObjetAR;
	private String documentCommentaireAR;
	private String documentTypeAR;
	private Integer documentIdDocumentOriginal;
	private Integer documentIdCourrierOriginal;
	private Integer ordre;
	private Date documentDateConsultation;
	private Integer documentNombreCopie;
	private Set<Naturedocument1> naturedocument1s = new HashSet<Naturedocument1>(
			0);
	private Set<Naturedocument3> naturedocument3s = new HashSet<Naturedocument3>(
			0);
	private Set<Naturedocument2> naturedocument2s = new HashSet<Naturedocument2>(
			0);
	private Set<Document> documents = new HashSet<Document>(0);
	private String documentTypeUpload;
   // KHA 
	// 07-03-2018
	 private Set<TransactionDocument> transactionDocuments = new HashSet<TransactionDocument>(0);
	
	private DocumentCategorie documentCategorie;
	

	public Document() {
	}

	public Document(Courrier courrier, String documentReference,
			String documentNom, String documentObjet,
			String documentCommentaire, String documentType,
			Integer documentDelegueId, Integer documentProprietaire,
			Date documentDateInsertion, Integer documentHierarchique,
			Boolean documentSupprime, Date documentSupprimeDate,
			Integer documentSupprimeDelegueId,
			Integer documentNombreCopie,
			Set<Naturedocument1> naturedocument1s,
			Set<Naturedocument3> naturedocument3s,
			Set<Naturedocument2> naturedocument2s ,String documentNomAR, String documentObjetAR, String documentCommentaireAR, String documentTypeAR, DocumentCategorie documentCategorie) {
		this.courrier = courrier;
		this.documentReference = documentReference;
		this.documentNom = documentNom;
		this.documentObjet = documentObjet;
		this.documentCommentaire = documentCommentaire;
		this.documentType = documentType;
		this.documentDelegueId = documentDelegueId;
		this.documentProprietaire = documentProprietaire;
		this.documentDateInsertion = documentDateInsertion;
		this.documentHierarchique = documentHierarchique;
		this.documentSupprime = documentSupprime;
		this.documentSupprimeDate = documentSupprimeDate;
		this.documentSupprimeDelegueId = documentSupprimeDelegueId;
		this.naturedocument1s = naturedocument1s;
		this.naturedocument3s = naturedocument3s;
		this.naturedocument2s = naturedocument2s;
		this.documentNomAR= documentNomAR ;
		this.documentObjetAR= documentObjetAR;
		this.documentCommentaireAR= documentCommentaireAR;
		this.documentTypeAR= documentTypeAR;
		this.documentCategorie = documentCategorie;
		this.documentNombreCopie = documentNombreCopie;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idDocument", unique = true, nullable = false)
	public Integer getIdDocument() {
		return this.idDocument;
	}

	public void setIdDocument(Integer idDocument) {
		this.idDocument = idDocument;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idCourrier")
	public Courrier getCourrier() {
		return this.courrier;
	}

	public void setCourrier(Courrier courrier) {
		this.courrier = courrier;
	}

	@Column(name = "documentReference", length = 100)
	public String getDocumentReference() {
		return this.documentReference;
	}

	public void setDocumentReference(String documentReference) {
		this.documentReference = documentReference;
	}

	@Column(name = "documentNom", length = 254)
	public String getDocumentNom() {
		return this.documentNom;
	}

	public void setDocumentNom(String documentNom) {
		this.documentNom = documentNom;
	}

	@Column(name = "documentObjet", length = 254)
	public String getDocumentObjet() {
		return this.documentObjet;
	}

	public void setDocumentObjet(String documentObjet) {
		this.documentObjet = documentObjet;
	}

	@Column(name = "documentCommentaire", length = 65535)
	public String getDocumentCommentaire() {
		return this.documentCommentaire;
	}

	public void setDocumentCommentaire(String documentCommentaire) {
		this.documentCommentaire = documentCommentaire;
	}

	@Column(name = "documentType", length = 100)
	public String getDocumentType() {
		return this.documentType;
	}

	public void setDocumentType(String documentType) {
		this.documentType = documentType;
	}

	@Column(name = "documentDelegueId")
	public Integer getDocumentDelegueId() {
		return this.documentDelegueId;
	}

	public void setDocumentDelegueId(Integer documentDelegueId) {
		this.documentDelegueId = documentDelegueId;
	}

	@Column(name = "documentProprietaire")
	public Integer getDocumentProprietaire() {
		return this.documentProprietaire;
	}

	public void setDocumentProprietaire(Integer documentProprietaire) {
		this.documentProprietaire = documentProprietaire;
	}

//	@Temporal(TemporalType.DATE)
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "documentDateInsertion")
	public Date getDocumentDateInsertion() {
		return this.documentDateInsertion;
	}

	public void setDocumentDateInsertion(Date documentDateInsertion) {
		
		if(documentDateInsertion!=null){
			Calendar cal = Calendar.getInstance();
			  cal.setTime(documentDateInsertion);
			  cal.set(Calendar.MILLISECOND, 0);
			  documentDateInsertion = new java.sql.Timestamp(cal.getTimeInMillis());}
		this.documentDateInsertion = documentDateInsertion;
		
	}

	@Column(name = "documentHierarchique")
	public Integer getDocumentHierarchique() {
		return this.documentHierarchique;
	}

	public void setDocumentHierarchique(Integer documentHierarchique) {
		this.documentHierarchique = documentHierarchique;
	}

	@Column(name = "documentSupprime")
	public Boolean getDocumentSupprime() {
		return this.documentSupprime;
	}

	public void setDocumentSupprime(Boolean documentSupprime) {
		this.documentSupprime = documentSupprime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "documentSupprimeDate", length = 10)
	public Date getDocumentSupprimeDate() {
		return this.documentSupprimeDate;
	}

	public void setDocumentSupprimeDate(Date documentSupprimeDate) {
		this.documentSupprimeDate = documentSupprimeDate;
	}

	@Column(name = "documentSupprimeDelegueId")
	public Integer getDocumentSupprimeDelegueId() {
		return this.documentSupprimeDelegueId;
	}

	public void setDocumentSupprimeDelegueId(Integer documentSupprimeDelegueId) {
		this.documentSupprimeDelegueId = documentSupprimeDelegueId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set<Naturedocument1> getNaturedocument1s() {
		return this.naturedocument1s;
	}

	public void setNaturedocument1s(Set<Naturedocument1> naturedocument1s) {
		this.naturedocument1s = naturedocument1s;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set<Naturedocument3> getNaturedocument3s() {
		return this.naturedocument3s;
	}

	public void setNaturedocument3s(Set<Naturedocument3> naturedocument3s) {
		this.naturedocument3s = naturedocument3s;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set<Naturedocument2> getNaturedocument2s() {
		return this.naturedocument2s;
	}

	public void setNaturedocument2s(Set<Naturedocument2> naturedocument2s) {
		this.naturedocument2s = naturedocument2s;
	}

	public void setDocumentParent(Document documentParent) {
		this.documentParent = documentParent;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "documentParent")
	public Document getDocumentParent() {
		return documentParent;
	}

	public void setDocuments(Set<Document> documents) {
		this.documents = documents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "documentParent")
	public Set<Document> getDocuments() {
		return documents;
	}
	@Column(name = "documentNom_AR", length = 254)
	public String getDocumentNomAR() {
		return documentNomAR;
	}

	public void setDocumentNomAR(String documentNomAR) {
		this.documentNomAR = documentNomAR;
	}
	
	@Column(name = "documentObjet_AR", length = 254)
	public String getDocumentObjetAR() {
		return documentObjetAR;
	}

	public void setDocumentObjetAR(String documentObjetAR) {
		this.documentObjetAR = documentObjetAR;
	}
	@Column(name = "documentCommentaire_AR", length = 65535)
	public String getDocumentCommentaireAR() {
		return documentCommentaireAR;
	}

	public void setDocumentCommentaireAR(String documentCommentaireAR) {
		this.documentCommentaireAR = documentCommentaireAR;
	}

	@Column(name = "documentType_AR", length = 100)
	public String getDocumentTypeAR() {
		return documentTypeAR;
	}

	public void setDocumentTypeAR(String documentTypeAR) {
		this.documentTypeAR = documentTypeAR;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "documentCategorieId")
	public DocumentCategorie getDocumentCategorie() {
		return this.documentCategorie;
	}

	public void setDocumentCategorie(DocumentCategorie documentCategorie) {
		this.documentCategorie = documentCategorie;
	}

	public void setDocumentIdDocumentOriginal(Integer documentIdDocumentOriginal) {
		this.documentIdDocumentOriginal = documentIdDocumentOriginal;
	}
	@Column(name = "documentIdDocumentOriginal")
	public Integer getDocumentIdDocumentOriginal() {
		return documentIdDocumentOriginal;
	}
	@Column(name = "documentIdCourrierOriginal")
	public Integer getDocumentIdCourrierOriginal() {
		return documentIdCourrierOriginal;
	}

	public void setDocumentIdCourrierOriginal(Integer documentIdCourrierOriginal) {
		this.documentIdCourrierOriginal = documentIdCourrierOriginal;
	}

	public Integer getOrdre() {
		return ordre;
	}

	@Column(name = "ordre")
	public void setOrdre(Integer ordre) {
		this.ordre = ordre;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "documentDateConsultation", length = 10)
	public Date getDocumentDateConsultation() {
		
		if(documentDateConsultation!=null){
			Calendar cal = Calendar.getInstance();
			  cal.setTime(documentDateConsultation);
			  cal.set(Calendar.MILLISECOND, 0);
			  documentDateConsultation = new java.sql.Timestamp(cal.getTimeInMillis());}
		
		return documentDateConsultation;
	}

	public void setDocumentDateConsultation(Date documentDateConsultation) {
		this.documentDateConsultation = documentDateConsultation;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set<TransactionDocument> getTransactionDocuments() {
		return transactionDocuments;
	}

	public void setTransactionDocuments(
			Set<TransactionDocument> transactionDocuments) {
		this.transactionDocuments = transactionDocuments;
	}

	@Column(name = "documentNombreCopie")
	public Integer getDocumentNombreCopie() {
		return documentNombreCopie;
	}

	public void setDocumentNombreCopie(Integer documentNombreCopie) {
		this.documentNombreCopie = documentNombreCopie;
	}

	@Column(name = "documentTypeUpload")
	public String getDocumentTypeUpload() {
		return documentTypeUpload;
	}

	public void setDocumentTypeUpload(String documentTypeUpload) {
		this.documentTypeUpload = documentTypeUpload;
	}
	
}
