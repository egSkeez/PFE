package xtensus.entity;

// Generated 22 mars 2013 14:16:14 by Hibernate Tools 3.4.0.Beta1

import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Dossier generated by hbm2java
 */
@Entity
@Table(name = "dossier")
public class Dossier extends Entite implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2776529473688045525L;
	private Integer dossierId;
	private Typedossier typedossier;
	private Confidentialite confidentialite;
	private Urgence urgence;
	private String dossierReference;
	private Date dossierDateCreation;
	private String dossierIntitule;
	private String dossierDescription;
	private Integer dossierDelegueId;
	private Boolean dossierSupprime;
	private Date dossierSupprimeDate;
	private Integer dossierSupprimeDelegueId;
	private Integer dossierProprietaireId;
	private Set<Liensdossier> liensdossiers = new HashSet<Liensdossier>(0);
	private Set<Transaction> transactions = new HashSet<Transaction>(0);
	private Set<Liensdossier> liensdossiers_1 = new HashSet<Liensdossier>(0);
	private Set<Courrier> courriers = new HashSet<Courrier>(0);

	public Dossier() {
	}

	public Dossier(Typedossier typedossier, Confidentialite confidentialite,
			Urgence urgence, String dossierReference, Date dossierDateCreation,
			String dossierIntitule, String dossierDescription,
			Integer dossierDelegueId, Boolean dossierSupprime,
			Date dossierSupprimeDate, Integer dossierSupprimeDelegueId,
			Set<Liensdossier> liensdossiers, Set<Transaction> transactions,
			Set<Liensdossier> liensdossiers_1, Set<Courrier> courriers) {
		this.typedossier = typedossier;
		this.confidentialite = confidentialite;
		this.urgence = urgence;
		this.dossierReference = dossierReference;
		this.dossierDateCreation = dossierDateCreation;
		this.dossierIntitule = dossierIntitule;
		this.dossierDescription = dossierDescription;
		this.dossierDelegueId = dossierDelegueId;
		this.dossierSupprime = dossierSupprime;
		this.dossierSupprimeDate = dossierSupprimeDate;
		this.dossierSupprimeDelegueId = dossierSupprimeDelegueId;
		this.liensdossiers = liensdossiers;
		this.transactions = transactions;
		this.liensdossiers_1 = liensdossiers_1;
		this.courriers = courriers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "dossierId", unique = true, nullable = false)
	public Integer getDossierId() {
		return this.dossierId;
	}

	public void setDossierId(Integer dossierId) {
		this.dossierId = dossierId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "typeDossierId")
	public Typedossier getTypedossier() {
		return this.typedossier;
	}

	public void setTypedossier(Typedossier typedossier) {
		this.typedossier = typedossier;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idConf")
	public Confidentialite getConfidentialite() {
		return this.confidentialite;
	}

	public void setConfidentialite(Confidentialite confidentialite) {
		this.confidentialite = confidentialite;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idUrgence")
	public Urgence getUrgence() {
		return this.urgence;
	}

	public void setUrgence(Urgence urgence) {
		this.urgence = urgence;
	}

	@Column(name = "dossierReference", length = 50)
	public String getDossierReference() {
		return this.dossierReference;
	}

	public void setDossierReference(String dossierReference) {
		this.dossierReference = dossierReference;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dossierDateCreation", length = 10)
	public Date getDossierDateCreation() {
		return this.dossierDateCreation;
	}

	public void setDossierDateCreation(Date dossierDateCreation) {
		if(dossierDateCreation!=null){
			Calendar cal = Calendar.getInstance();
			  cal.setTime(dossierDateCreation);
			  cal.set(Calendar.MILLISECOND, 0);
			  dossierDateCreation = new java.sql.Timestamp(cal.getTimeInMillis());
			  }
		this.dossierDateCreation = dossierDateCreation;
	}

	@Column(name = "dossierIntitule", length = 254)
	public String getDossierIntitule() {
		return this.dossierIntitule;
	}

	public void setDossierIntitule(String dossierIntitule) {
		this.dossierIntitule = dossierIntitule;
	}

	@Column(name = "dossierDescription", length = 65535)
	public String getDossierDescription() {
		return this.dossierDescription;
	}

	public void setDossierDescription(String dossierDescription) {
		this.dossierDescription = dossierDescription;
	}

	@Column(name = "dossierDelegueId")
	public Integer getDossierDelegueId() {
		return this.dossierDelegueId;
	}

	public void setDossierDelegueId(Integer dossierDelegueId) {
		this.dossierDelegueId = dossierDelegueId;
	}

	@Column(name = "dossierSupprime")
	public Boolean getDossierSupprime() {
		return this.dossierSupprime;
	}

	public void setDossierSupprime(Boolean dossierSupprime) {
		this.dossierSupprime = dossierSupprime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dossierSupprimeDate", length = 10)
	public Date getDossierSupprimeDate() {
		return this.dossierSupprimeDate;
	}

	public void setDossierSupprimeDate(Date dossierSupprimeDate) {
		if(dossierSupprimeDate!=null){
			Calendar cal = Calendar.getInstance();
			  cal.setTime(dossierSupprimeDate);
			  cal.set(Calendar.MILLISECOND, 0);
			  dossierSupprimeDate = new java.sql.Timestamp(cal.getTimeInMillis());}
		this.dossierSupprimeDate = dossierSupprimeDate;
	}

	@Column(name = "dossierSupprimeDelegueId")
	public Integer getDossierSupprimeDelegueId() {
		return this.dossierSupprimeDelegueId;
	}

	public void setDossierSupprimeDelegueId(Integer dossierSupprimeDelegueId) {
		this.dossierSupprimeDelegueId = dossierSupprimeDelegueId;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "dossiers")
	public Set<Liensdossier> getLiensdossiers() {
		return this.liensdossiers;
	}

	public void setLiensdossiers(Set<Liensdossier> liensdossiers) {
		this.liensdossiers = liensdossiers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dossier")
	public Set<Transaction> getTransactions() {
		return this.transactions;
	}

	public void setTransactions(Set<Transaction> transactions) {
		this.transactions = transactions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dossier")
	public Set<Liensdossier> getLiensdossiers_1() {
		return this.liensdossiers_1;
	}

	public void setLiensdossiers_1(Set<Liensdossier> liensdossiers_1) {
		this.liensdossiers_1 = liensdossiers_1;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "dossiers")
	public Set<Courrier> getCourriers() {
		return this.courriers;
	}

	public void setCourriers(Set<Courrier> courriers) {
		this.courriers = courriers;
	}

	public void setDossierProprietaireId(Integer dossierProprietaireId) {
		this.dossierProprietaireId = dossierProprietaireId;
	}

	@Column(name = "dossierProprietaireId")
	public Integer getDossierProprietaireId() {
		return dossierProprietaireId;
	}

}
