package xtensus.beans.common.GBO;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import xtensus.beans.common.VariableGlobale;
import xtensus.entity.AoConsultation;
import xtensus.services.ApplicationManager;


@Component
@Scope("request")
	public class AoConsultationListBean {
	private ApplicationManager appMgr;
	private AoConsultation aoConsultation;
	private DataModel listAoConsultationDM;
	private List<AoConsultation> listAoConsultation;
	private boolean succesAjout;
	private boolean succesSelectDel;
	private boolean allerAjout;
	private boolean allerModif;
	private boolean affect2;
	private int aoConsultationId;

	@SuppressWarnings("unused")
	
	private long records = 0;
	@Autowired
	private VariableGlobale vb;
	
	public AoConsultationListBean(){
		
	}
	@Autowired
	public AoConsultationListBean(@Qualifier("applicationManager") ApplicationManager appMgr) {

		this.appMgr = appMgr;
		aoConsultation = new AoConsultation();
		listAoConsultationDM = new ListDataModel();
		listAoConsultation = new ArrayList<AoConsultation>();
		vb = new VariableGlobale();
	}

	@PostConstruct
	public void Initialize() {
		listAoConsultation = new ArrayList<AoConsultation>();
		aoConsultation = new AoConsultation();
		try {
			listAoConsultation= appMgr.getAppelOffreConsultationByID();
			listAoConsultationDM.setWrappedData(listAoConsultation);
		} catch (Exception e) {		
			e.printStackTrace();
		}
	}
	

		public void getSelectedRow(){
			aoConsultation = new AoConsultation();
			try {
				
				aoConsultation = (AoConsultation) listAoConsultationDM.getRowData();
				vb.setAoConsultation(aoConsultation);
				
			
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		public void getSelectionRow() {

				this.getSelectedRow();
				aoConsultation = new AoConsultation();
				Initialize();
		}
				


	@SuppressWarnings("unchecked")
	public long getRecords() {

		return (listAoConsultationDM != null && listAoConsultationDM.getWrappedData() != null) ? ((List<AoConsultation>) listAoConsultationDM
				.getWrappedData()).size() : 0;
	}
	
	
	
	public String affecter() {
		String res = "affecter";

		try {
			vb.getCourrier();
			aoConsultation = (AoConsultation) listAoConsultationDM.getRowData();
			System.out.println("aoConsultation  === " + aoConsultation.getAoConsultationNumero());
			System.out.println("aoConsultation  === " + aoConsultation.getAoConsultationId());
			vb.setAoConsultation(aoConsultation);
			System.out.println("aoConsultation  === " + vb.getAoConsultation().getAoConsultationNumero());
			aoConsultationId = aoConsultation.getAoConsultationId();
			System.out.println("aoConsultationId  === " +aoConsultationId);

			vb.setAoConsultationId(aoConsultationId);

			vb.setPopupAffectation(true);
			String s1 = vb.getPagePrecedente();
			String s2 = "ajout";

			System.out.println("cette méthode est = " + vb.getPagePrecedente());
			// System.out.println("Il va retourner à la page d'ajout ="
			// + s1.equals(s2));
			if (s1 != null && s2 != null && s1.equals(s2)) {
				allerAjout = true;
				 res = "affecter";
			} else {
				allerModif = true;
				 res = "affectermodif";
			}

		} catch (Exception e) {
			e.printStackTrace();
			affect2 = false;
		}
		return res;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/**
	 * Getter and Setter
	 */

	public AoConsultation getAoConsultation() {
		return aoConsultation;
	}

	public void setAoConsultation(AoConsultation aoConsultation) {
		this.aoConsultation = aoConsultation;
	}

	public DataModel getListAoConsultationDM() {
		return listAoConsultationDM;
	}

	public void setListAoConsultationDM(DataModel listAoConsultationDM) {
		this.listAoConsultationDM = listAoConsultationDM;
	}

	public List<AoConsultation> getListAoConsultation() {
		return listAoConsultation;
	}

	public void setListAoConsultation(List<AoConsultation> listAoConsultation) {
		this.listAoConsultation = listAoConsultation;
	}

	public void setRecords(long records) {
		this.records = records;
	}


	public boolean isSuccesAjout() {
		return succesAjout;
	}

	public void setSuccesAjout(boolean succesAjout) {
		this.succesAjout = succesAjout;
	}

	public VariableGlobale getVb() {
		return vb;
	}

	public void setVb(VariableGlobale vb) {
		this.vb = vb;
	}
	public boolean isSuccesSelectDel() {
		return succesSelectDel;
	}
	public void setSuccesSelectDel(boolean succesSelectDel) {
		this.succesSelectDel = succesSelectDel;
	}
	public boolean isAllerAjout() {
		return allerAjout;
	}
	public void setAllerAjout(boolean allerAjout) {
		this.allerAjout = allerAjout;
	}
	public boolean isAllerModif() {
		return allerModif;
	}
	public void setAllerModif(boolean allerModif) {
		this.allerModif = allerModif;
	}
	public boolean isAffect2() {
		return affect2;
	}
	public void setAffect2(boolean affect2) {
		this.affect2 = affect2;
	}
	public int getAoConsultationId() {
		return aoConsultationId;
	}
	public void setAoConsultationId(int aoConsultationId) {
		this.aoConsultationId = aoConsultationId;
	}

	
	
}
