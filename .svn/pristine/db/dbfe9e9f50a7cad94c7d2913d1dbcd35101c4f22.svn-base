package xtensus.entity;

// Generated 6 d√©c. 2012 15:06:54 by Hibernate Tools 3.4.0.Beta1

import java.util.Date;
import java.util.Map;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.CollectionOfElements;
import org.hibernate.annotations.MapKey;

/**
 * Mail generated by hbm2java
 */
@Entity
@Table(name = "mail")
public class Mail extends xtensus.entity.Entite implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 674594502319923696L;
	/**
	 * 
	 */
	private Integer mailId;
	private String mailFromName;
	private String mailFromAddress;
	private String mailFromOrganization;
	private String mailToAddress;
	private String mailSubject;
	private Date mailReceivedDate;
	private String mailContent;
	private String mailOriginalContent;
	private String mailReplyTo;
	private String mailPriority;
	private Map<String, String> mailHeaders;
	private Map<String,Integer> mailAttachmentFiles ;
	private int mailIs_treated;
	private int mailDeleted;
	

	public Mail() {
	}

	public Mail(String mailFromName, String mailFromAddress, String mailFromOrganization,
			String mailToAddress, String mailSubject, Date mailReceivedDate,
			String mailContent, String mailOriginalContent, String mailReplyTo, String mailPriority,
			Map<String, String> mailHeaders,Map<String,Integer> mailAttachmentFiles, int mailIs_treated, int mailDeleted) {
		this.mailFromName = mailFromName;
		this.mailFromAddress = mailFromAddress;
		this.mailFromOrganization = mailFromOrganization ;
		this.mailToAddress = mailToAddress;
		this.mailSubject = mailSubject;
		this.mailReceivedDate = mailReceivedDate;
		this.mailContent = mailContent;
		this.mailOriginalContent = mailOriginalContent;
		this.mailReplyTo = mailReplyTo;
		this.mailPriority = mailPriority;
		this.mailHeaders = mailHeaders;
		this.mailAttachmentFiles = mailAttachmentFiles;
		this.mailIs_treated = mailIs_treated;
		this.mailDeleted = mailDeleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "mailId", unique = true, nullable = false)
	public Integer getMailId() {
		return this.mailId;
	}

	public void setMailId(Integer mailId) {
		this.mailId = mailId;
	}

	@Column(name = "mailFromName")
	public String getMailFromName() {
		return this.mailFromName;
	}



	public void setMailFromName(String mailFromName) {
		this.mailFromName = mailFromName;
	}

	@Column(name = "mailfromOrganization")
	public String getMailFromOrganization() {
		return mailFromOrganization;
	}

	public void setMailFromOrganization(String mailFromOrganization) {
		this.mailFromOrganization = mailFromOrganization;
	}
	
	@Column(name = "mailFromAddress")
	public String getMailFromAddress() {
		return this.mailFromAddress;
	}

	public void setMailFromAddress(String mailFromAddress) {
		this.mailFromAddress = mailFromAddress;
	}

	@Column(name = "mailToAddress")
	public String getMailToAddress() {
		return this.mailToAddress;
	}

	public void setMailToAddress(String mailToAddress) {
		this.mailToAddress = mailToAddress;
	}

	@Column(name = "mailSubject")
	public String getMailSubject() {
		return this.mailSubject;
	}

	public void setMailSubject(String mailSubject) {
		this.mailSubject = mailSubject;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "mailReceivedDate", length = 19)
	public Date getMailReceivedDate() {
		return this.mailReceivedDate;
	}

	public void setMailReceivedDate(Date mailReceivedDate) {
		this.mailReceivedDate = mailReceivedDate;
	}

	@Column(name = "mailContent", length = 65535)
	public String getMailContent() {
		return this.mailContent;
	}

	public void setMailContent(String mailContent) {
		this.mailContent = mailContent;
	}

	@Column(name = "mailOriginalContent", length = 65535)
	public String getMailOriginalContent() {
		return this.mailOriginalContent;
	}

	public void setMailOriginalContent(String mailOriginalContent) {
		this.mailOriginalContent = mailOriginalContent;
	}

	@Column(name = "mailReplyTo")
	public String getMailReplyTo() {
		return this.mailReplyTo;
	}

	public void setMailReplyTo(String mailReplyTo) {
		this.mailReplyTo = mailReplyTo;
	}
	
	@Column(name = "mailPriority")
	public String getMailPriority() {
		return mailPriority;
	}

	public void setMailPriority(String mailPriority) {
		this.mailPriority = mailPriority;
	}

	@SuppressWarnings("deprecation")
	@CollectionOfElements(fetch= FetchType.EAGER)
	@JoinTable(name = "mail_mailheaders", joinColumns = @JoinColumn(name = "mail_mailId"))
	@MapKey(columns = {@Column(name="mapkey")})
	@Column(name="mailHeaders")
	public Map<String, String> getMailHeaders() {
		return this.mailHeaders;
	}

	public void setMailHeaders(Map<String, String> mailHeaders) {
		this.mailHeaders = mailHeaders;
	}

	@Column(name = "is_treated", columnDefinition = "TINYINT")
	public int getMailIs_treated() {
		return mailIs_treated;
	}

	public void setMailIs_treated(int mailIs_treated) {
		this.mailIs_treated = mailIs_treated;
	}

	
	@SuppressWarnings("deprecation")
	@CollectionOfElements(fetch= FetchType.EAGER)
	@JoinTable(name = "mail_mailattachmentfiles", joinColumns = @JoinColumn(name = "mail_mailId"))
	@MapKey(columns = {@Column(name="filename")})
	@Column(name="size")
	public Map<String,Integer> getMailAttachmentFiles() {
		return mailAttachmentFiles;
	}

	public void setMailAttachmentFiles(Map<String,Integer> mailAttachmentFiles) {
		this.mailAttachmentFiles = mailAttachmentFiles;
	}
	@Column(name = "mailDeleted", columnDefinition = "TINYINT")
	public int getMailDeleted() {
		return mailDeleted;
	}

	public void setMailDeleted(int mailDeleted) {
		this.mailDeleted = mailDeleted;
	}

	@Override
	public String toString() {
		return "Mail [mailId=" + mailId + ", mailFromName=" + mailFromName
				+ ", mailFromAddress=" + mailFromAddress
				+ ", mailFromOrganization=" + mailFromOrganization
				+ ", mailToAddress=" + mailToAddress + ", mailSubject="
				+ mailSubject + ", mailReceivedDate=" + mailReceivedDate
				+ ", mailOriginalContent=" + mailOriginalContent
				+ ", mailReplyTo=" + mailReplyTo + ", mailPriority="
				+ mailPriority + ", mailHeaders=" + mailHeaders
				+ ", mailIs_treated=" + mailIs_treated + ", mailDeleted="
				+ mailDeleted + "]";
	}


}
