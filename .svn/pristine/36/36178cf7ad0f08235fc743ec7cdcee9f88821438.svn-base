package xtensus.entity;

// Generated 5 mars 2012 17:46:38 by Hibernate Tools 3.4.0.Beta1

import java.util.Calendar;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Lot generated by hbm2java
 */
@Entity
@Table(name = "transactiondest")
public class TransactionDestination extends Entite implements
		java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7794697188366885868L;
	private TransactionDestinationId id;
	private String transactionDestTypeIntervenant;
	private Integer transactionDestIdIntervenant;
	private Date transactionDestDateConsultation;
	private Date transactionDestDateTransfert;
	private Date transactionDestDateReponse;
//	private Transaction transaction;
	
	// C*
//	private Integer transactionDestResponsableReponse;
	// C*
//KHA ajoutte 01-03-2019
	private Date transactionDestDateReceptionPhysique;
	private Etat transactionDestEtatReceptionPhysique;
	private String transactionDestCommentaireReceptionPhysique;
	
	public TransactionDestination() {
	}


	public TransactionDestination(TransactionDestinationId id,  String transactionDestTypeIntervenant,
			Integer transactionDestIdIntervenant) {
		this.id = id;
		this.transactionDestTypeIntervenant = transactionDestTypeIntervenant;
		this.transactionDestIdIntervenant = transactionDestIdIntervenant;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idTransaction", column = @Column(name = "idTransaction", nullable = false)),
			@AttributeOverride(name = "idExpDest", column = @Column(name = "idExpDest", nullable = false)) })
	public TransactionDestinationId getId() {
		return this.id;
	}

	public void setId(TransactionDestinationId id) {
		this.id = id;
	}


	@Column(name = "transactionDestTypeIntervenant", length = 45)
	public String getTransactionDestTypeIntervenant() {
		return this.transactionDestTypeIntervenant;
	}

	public void setTransactionDestTypeIntervenant(
			String transactionDestTypeIntervenant) {
		this.transactionDestTypeIntervenant = transactionDestTypeIntervenant;
	}

	@Column(name = "transactionDestIdIntervenant")
	public Integer getTransactionDestIdIntervenant() {
		return this.transactionDestIdIntervenant;
	}

	public void setTransactionDestIdIntervenant(
			Integer transactionDestIdIntervenant) {
		this.transactionDestIdIntervenant = transactionDestIdIntervenant;
	}

	@Column(name = "transactionDestDateTransfert")
	public void setTransactionDestDateTransfert(Date transactionDestDateTransfert) {
		if(transactionDestDateTransfert!=null){
			Calendar cal = Calendar.getInstance();
			  cal.setTime(transactionDestDateTransfert);
			  cal.set(Calendar.MILLISECOND, 0);
			  transactionDestDateTransfert = new java.sql.Timestamp(cal.getTimeInMillis());}
		this.transactionDestDateTransfert = transactionDestDateTransfert;
	}


	public Date getTransactionDestDateTransfert() {
		return transactionDestDateTransfert;
	}
	
	@Column(name = "transactionDestDateConsultation")
	public void setTransactionDestDateConsultation(
			Date transactionDestDateConsultation) {
		
		
		
		if(transactionDestDateConsultation!=null){
			Calendar cal = Calendar.getInstance();
			  cal.setTime(transactionDestDateConsultation);
			  cal.set(Calendar.MILLISECOND, 0);
			  transactionDestDateConsultation = new java.sql.Timestamp(cal.getTimeInMillis());}
		
		this.transactionDestDateConsultation = transactionDestDateConsultation;
	}


	public Date getTransactionDestDateConsultation() {
		return transactionDestDateConsultation;
	}
	
	@Column(name = "transactionDestDateReponse")
	public void setTransactionDestDateReponse(
			Date transactionDestDateReponse) {
		this.transactionDestDateReponse = transactionDestDateReponse;
	}


	public Date getTransactionDestDateReponse() {
		return transactionDestDateReponse;
	}

	@Column(name = "transactionDestDateReceptionPhysique")
	public Date getTransactionDestDateReceptionPhysique() {
		return transactionDestDateReceptionPhysique;
	}


	public void setTransactionDestDateReceptionPhysique(
			Date transactionDestDateReceptionPhysique) {
		if(transactionDestDateReceptionPhysique!=null){
			Calendar cal = Calendar.getInstance();
			  cal.setTime(transactionDestDateReceptionPhysique);
			  cal.set(Calendar.MILLISECOND, 0);
			  transactionDestDateReceptionPhysique = new java.sql.Timestamp(cal.getTimeInMillis());
			  }
		this.transactionDestDateReceptionPhysique = transactionDestDateReceptionPhysique;
	}


	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "transactionDestEtatReceptionPhysiqueId")
	public Etat getTransactionDestEtatReceptionPhysique() {
		return transactionDestEtatReceptionPhysique;
	}


	public void setTransactionDestEtatReceptionPhysique(
			Etat transactionDestEtatReceptionPhysique) {
 
		this.transactionDestEtatReceptionPhysique = transactionDestEtatReceptionPhysique;
		System.out.println("fin set etat");
	}

	@Column(name = "transactionDestCommentaireReceptionPhysique")
	public String getTransactionDestCommentaireReceptionPhysique() {
		return transactionDestCommentaireReceptionPhysique;
	}


	public void setTransactionDestCommentaireReceptionPhysique(
			String transactionDestCommentaireReceptionPhysique) {
		System.out.println("DANS set transactionDestCommentaireReceptionPhysique  =   "+transactionDestCommentaireReceptionPhysique);
		this.transactionDestCommentaireReceptionPhysique = transactionDestCommentaireReceptionPhysique;
	}


	

// C*
//	@Column(name = "transactionDestResponsableReponse")
//	public Integer getTransactionDestResponsableReponse() {
//		return transactionDestResponsableReponse;
//	}
//
//
//	public void setTransactionDestResponsableReponse(
//			Integer transactionDestResponsableReponse) {
//		this.transactionDestResponsableReponse = transactionDestResponsableReponse;
//	}
// C*

//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "transactionId", nullable=false)
//	public Transaction getTransaction() {
//		return transaction;
//	}
//
//
//	public void setTransaction(Transaction transaction) {
//		this.transaction = transaction;
//	}
	
	
	

}
